version: '3.7'
services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-volume-dev:/data/postgres
    env_file:
      - env/dev.env
    networks:
      - orca

  backend:
    container_name: backend
    build:
      context: ./packages/backend
      target: development
    env_file:
      - env/dev.env
    networks:
      - orca
    volumes:
      - ./packages/backend/src:/usr/src/app/packages/backend/src
      - uploads-dev:/usr/src/app/packages/backend/uploaded
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - postgres
    command: [ "yarn", "start:dev" ]

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./packages/frontend
  #     target: development
  #   env_file:
  #     - env/dev.env
  #   networks:
  #     - orca
  #   volumes:
  #     - ./packages/frontend/src:/usr/src/app/src
  #     - ./packages/frontend/public:/usr/src/app/public
  #     - ./packages/frontend/.next:/usr/src/app/.next
  #   ports:
  #     - ${FRONTEND_PORT}:${FRONTEND_PORT}
  #   depends_on:
  #     - backend
  #   command: [ "yarn", "dev" ]

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes:
      - pgadmin-volume-dev:/root/.pgadmin
    env_file:
      - env/dev.env
    networks:
      - orca

networks:
  orca:
    driver: bridge

volumes:
  postgres-volume-dev:
  pgadmin-volume-dev:
  uploads-dev:
    external: false
