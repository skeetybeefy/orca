version: '3.7'
services:
  backend:
    container_name: backend.development
    build:
      context: ./
      target: development
    env_file:
      - env/dev.env
    networks:
      - orca
    volumes:
      - ./packages/backend/src:/usr/src/app/packages/backend/src
      - uploads-dev:/usr/src/app/packages/backend/uploaded
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - postgres
    command: yarn run lerna run start:dev --scope @orca/backend

  frontend:
    container_name: frontend.development
    build:
      context: ./
      target: development
    env_file:
      - env/dev.env
    networks:
      - orca
    volumes:
      - ./packages/frontend/src:/usr/src/app/packages/frontend/src
      - ./packages/frontend/public:/usr/src/app/packages/frontend/public
      - ./packages/frontend/.next:/usr/src/app/packages/frontend/.next
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      - backend
    command: yarn run lerna run start:dev --scope @orca/frontend

  postgres:
    container_name: postgres.development
    image: postgres:14-alpine
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-volume-dev:/data/postgres
    env_file:
      - env/dev.env
    networks:
      - orca

  pgadmin:
    container_name: pgadmin.development
    image: dpage/pgadmin4
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes:
      - pgadmin-volume-dev:/root/.pgadmin
    env_file:
      - env/dev.env
    networks:
      - orca

networks:
  orca:
    driver: bridge

volumes:
  postgres-volume-dev:
  pgadmin-volume-dev:
  uploads-dev:
    external: false
