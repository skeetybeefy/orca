version: '3.7'
services:
  backend:
    container_name: backend.production
    build:
      context: ./
      target: production.backend
    env_file:
      - env/prod.env
    networks:
      - orca
    volumes:
      - uploads-production:/usr/src/app/uploaded
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - postgres
    command: node dist/main

  frontend:
    container_name: frontend.production
    build:
      context: ./
      target: production.frontend
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    env_file:
      - env/prod.env
    networks:
      - orca
    command: node packages/frontend/server.js
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      - backend

  postgres:
    container_name: postgres.production
    image: postgres:14-alpine
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-volume-production:/data/postgres
    env_file:
      - env/prod.env
    networks:
      - orca

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin.production
    image: dpage/pgadmin4
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes:
      - pgadmin-volume-production:/root/.pgadmin
    env_file:
      - env/prod.env
    networks:
      - orca

networks:
  orca:
    driver: bridge

volumes:
  postgres-volume-production:
  pgadmin-volume-production:
  uploads-production:
    external: false
